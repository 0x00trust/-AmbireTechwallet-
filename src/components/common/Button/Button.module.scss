@import 'variables.scss';

// We use a mixin to reduce the repetition of code
@mixin ButtonStyle($primary-color) {
    // Variants
    &.filled {
        background: $primary-color;
        color: $c-titan-white;
    }

    &.outlined {
        background-color: transparent;
        color: $primary-color;
        border: 2px solid $primary-color;
    }

    &.text {
        background-color: transparent;
        color: $primary-color;
        border: none;
    }
}

.wrapper {
    @include flex-center-center;
    gap: 10px;
    height: 60px;
    padding: 0 20px;
    font-family: 'Poppins', sans-serif;
    font-size: 20px;
    font-weight: 500;
    border-radius: 12px;
    border: none;
    outline: none;
    transition: 0.3s ease-in-out opacity;
    cursor: pointer;

    
    svg {
        width: 24px;
        height: 24px;
    }

    // Default Button color
    @include ButtonStyle($c-turquoise);
    
    // Colors
    &.danger {
        @include ButtonStyle($danger-color);
    }
    
    // Gradients
    &.filled {
        &.primaryGradient {
            @include ButtonStyle(transparent linear-gradient(90deg, $c-turquoise 0%, $c-electric-violet 100%) 0% 0% no-repeat padding-box);
        }
    
        &.secondaryGradient {
            @include ButtonStyle(transparent linear-gradient(90deg, $c-heliotrope 0%, $c-electric-violet 100%) 0% 0% no-repeat padding-box);
        }
    
        &.terniaryGradient {
            @include ButtonStyle(transparent linear-gradient(90deg, $c-turquoise 0%, $c-blue-lagoon 100%) 0% 0% no-repeat padding-box);
        }
    }

    // Other states
    &.loading {
        @keyframes spin {
            from {
                transform: rotate(0deg);
            }
        
            to {
                transform: rotate(360deg);
            }
        }

        .loadingInner {
            display: flex;
            gap: 15px;
            align-items: center;

            .loadingText {
                margin: 0;
            }

            svg {
                animation: spin 1.5s infinite ease-in-out;
            }
        }
    }

    // Sizes
    &.small {
        font-size: 16px;
        height: 50px;
        padding: 0 15px;

        &.loading {
            .loadingInner {
                gap: 10px;

                svg {
                    width: 16px;
                    height: 16px;
                }
            }
        }
    }

    &:hover:not(.disabled) {
        opacity: .6;
    }

    &:active:not(.disabled) {
        opacity: 1;
    }

    &.disabled {
        opacity: .2;
        cursor: not-allowed;
    }
}
